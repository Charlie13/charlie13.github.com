<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ssh on taewan&#39;s blog</title>
    <link>http://taewan.kim/categories/ssh.html</link>
    <description>Recent content in Ssh on taewan&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Jan 2016 13:12:54 +0900</lastBuildDate>
    <atom:link href="http://taewan.kim/categories/ssh.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ssh 사용을 단순화하기 위한 ssh config 설정</title>
      <link>http://taewan.kim/blog/2016/01/28/ssh_config/</link>
      <pubDate>Thu, 28 Jan 2016 13:12:54 +0900</pubDate>
      
      <guid>http://taewan.kim/blog/2016/01/28/ssh_config/</guid>
      <description>

&lt;p&gt;사용자 홈디렉터리의 ~/.ssh/config 파일에 host 별 설정을 추가하면 ssh 명령 사용을 단순화 할 수 있습니다.
본 문서는 ~/.ssh/config 파일의 설정만을 다룹니다. ssh와 ssh key에 대해서는 궁굼하시다면 다음 문서를 참조하시기 바랍니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ssh 원격제어: &lt;a href=&#34;https://opentutorials.org/module/432/3738&#34;&gt;https://opentutorials.org/module/432/3738&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ssh key: &lt;a href=&#34;https://opentutorials.org/module/432/3742&#34;&gt;https://opentutorials.org/module/432/3742&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ssh의 기본 사용법은 다음과 같습니다 .
다음과 같은 명령을 내릴때 ssh 명령은 &amp;ldquo;~/.ssh/id_rsa&amp;rdquo; 인증서를 사용하여, 52.79.103.139 서버에 ubuntu로 로그인을 시도합니다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;taewanui-MacBook-Pro:~ taewan$ ssh ubuntu@52.79.103.139
Welcome to Ubuntu 14.04.3 LTS (GNU/Linux 3.13.0-74-generic x86_64)

Last login: Mon Feb  1 01:44:13 2016 from 211.210.76.6
ubuntu@ip-172-31-11-175:~$ pwd
/home/ubuntu
ubuntu@ip-172-31-11-175:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;기본 인증서가 다른 인증서를 사용해야 할 경우에는 다음과 같이 -i 옵션을 사용해야 합니다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;taewanui-MacBook-Pro:demo taewan$ ssh ubuntu@52.79.103.139 -i ~/.ssh/aws-seoul.pem
Welcome to Ubuntu 14.04.3 LTS (GNU/Linux 3.13.0-74-generic x86_64)

Last login: Mon Feb  1 02:10:40 2016 from 211.210.76.6
ubuntu@ip-172-31-11-175:~$ 

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;위 명령의 경우 인증서를 직접 지정해야 하기 때문에 사용하기 부담스러운 면이 있습니다. ssh을 단순하게 사용하는 방법중에 하나는 다음과 같은 alias를 사용하는 것 입니다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;taewanui-MacBook-Pro:demo taewan$ alias awsssh=&amp;quot;ssh ubuntu@52.79.103.139 -i ~/.ssh/aws-seoul.pem&amp;quot;
taewanui-MacBook-Pro:demo taewan$ awsssh
Welcome to Ubuntu 14.04.3 LTS (GNU/Linux 3.13.0-74-generic x86_64)

Last login: Mon Feb  1 02:23:47 2016 from 211.210.76.6
ubuntu@ip-172-31-11-175:~$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;alias를 사용하면 명령을 쉽게 입력할 수 는 있지만 관리 비용이 증가합니다. 또한 ssh 명령은 인증서, 서버 포트, 포트포워딩 등 다양한 설정 옵션이 있기 때문에 이러한 변경을 효과적으로 대응하기에 어렵다는 단점이 있습니다.&lt;/p&gt;

&lt;h1 id=&#34;ssh-사용-단순화-ssh-config:0984e7ebd3dce43c74ff94df48f1ae75&#34;&gt;ssh 사용 단순화:~/.ssh/config&lt;/h1&gt;

&lt;p&gt;이러한 문제를 해법은 &amp;ldquo;~/.ssh/config&amp;rdquo;을 사용하는 것 입니다. 다음은 일반적인 형태의 ~/.ssh/config 파일의 내용입니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;### for aws
Host aws-ubuntu1
    HostName 52.79.103.139
    IdentityFile ~/.ssh/aws-seoul.pem

Host aws-ubuntu2
    HostName 52.79.103.139
    User ubuntu
    IdentityFile ~/.ssh/aws-seoul.pem   

## for git
Host github.com 
    User git
    IdentityFile ~/.ssh/id_rsa_XXXXXXXXXXXX
Host bitbucket.org
    User git
    IdentityFile ~/.ssh/id_rsa_@@@@@@@@@@@@
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;위 config에서는 2개의 아마존 서버와 github 및 bitbucket 서버 4개의 서버에 대한 ssh 설정이 서버 별로 등록되어 있습니다.
위 예제에서 아마존 aws 서버는 다음의 두 가지 방법으로 로그인 할 수 있습니다.
ssh config 설정을 사용 할 경우 복수의 인증서를 사용하는 상황에서도 ssh 명령을 단순하게 유지할 수 있습니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;taewanui-MacBook-Pro:demo taewan$ ssh ubuntu@aws-ubuntu1
Welcome to Ubuntu 14.04.3 LTS (GNU/Linux 3.13.0-74-generic x86_64)

Last login: Mon Feb  1 02:37:28 2016 from 211.210.76.6
ubuntu@ip-172-31-11-175:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;아래의 경우 aws-ubuntu2에 로그인 계정 명을 등록하였기 때문에 ssh 명령을 더욱 단순하게 사용 가능합니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;taewanui-MacBook-Pro:demo taewan$ ssh aws-ubuntu2
Welcome to Ubuntu 14.04.3 LTS (GNU/Linux 3.13.0-74-generic x86_64)

Last login: Mon Feb  1 02:56:27 2016 from 211.210.76.6
ubuntu@ip-172-31-11-175:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ssh-config-파일:0984e7ebd3dce43c74ff94df48f1ae75&#34;&gt;~/.ssh/config 파일&lt;/h2&gt;

&lt;p&gt;ssh config 설정 파일의 사용자별 위치는 &amp;ldquo;~/.ssh/config&amp;rdquo;입니다.&lt;/p&gt;

&lt;h3 id=&#34;설정-파일-권한:0984e7ebd3dce43c74ff94df48f1ae75&#34;&gt;설정 파일 권한&lt;/h3&gt;

&lt;p&gt;ssh 설정 파일은 다른 사용자가 사용할 경우 심각한 권한 문제가 발생할 수 있습니다.
따라서 다음과 같은 권한으로 설정되어야 합니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod 440 ~/.ssh/config
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;설정-파일-유형:0984e7ebd3dce43c74ff94df48f1ae75&#34;&gt;설정 파일 유형&lt;/h3&gt;

&lt;p&gt;ssh 설정 파일의 기본 형태는 다음과 같습니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Host firsthost
    SSH_OPTION_1 custom_value
    SSH_OPTION_2 custom_value
    SSH_OPTION_3 custom_value

Host secondhost
    ANOTHER_OPTION custom_value

Host *host
    ANOTHER_OPTION custom_value

Host *
    CHANGE_DEFAULT custom_value
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ssh 설정 파일의 옵션 값은 다음과 같이 3가지 방법으로 값을 설정 할 수 있습니다.
다음 3 가지는 모두 유효한 설정입니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Port 4567
Port=4567
Port = 4567
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;호스트-맵핑:0984e7ebd3dce43c74ff94df48f1ae75&#34;&gt;호스트 맵핑&lt;/h3&gt;

&lt;p&gt;호스트 맵핑은 Host 속성과 Hostname 속성을 이용하여 실제 호스트 URL에 맵핑을 합니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Host: ssh 명령에 사용하는 이름&lt;/li&gt;
&lt;li&gt;Hostname: Host에 지정된 이름이 매핑되는 실제 호스트 명&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;Host dev
	HostName dev.taewan.kim
	Uset admin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;위와 같이 설정된 상태에서 &amp;ldquo;ssh dev&amp;rdquo;이 실행된다면 다음과 같은 명령으로 변환되어 실행됩니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh admin@dev.taewan.kim -i ~/.ssh/id_rsa&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2차-도메인-등-와일드카드-문자-지정:0984e7ebd3dce43c74ff94df48f1ae75&#34;&gt;2차 도메인 등 와일드카드 문자 지정&lt;/h3&gt;

&lt;p&gt;다음과 같이 와일드카드 문자로 호스트 명을 지정 할 수 있습니다. 이 경우 taewan.kim의 서브 도메인에 모두 적용됩니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Host *.taewan.kim
    User taewan
    PreferredAuthentications publickey
    IdentityFile ~/.ssh/taewan.dev
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;설정-파일-주요-속성:0984e7ebd3dce43c74ff94df48f1ae75&#34;&gt;설정 파일 주요 속성&lt;/h2&gt;

&lt;h3 id=&#34;일반-설정:0984e7ebd3dce43c74ff94df48f1ae75&#34;&gt;일반 설정&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Hostname: 연결될 서버 호스트 명으로 사용됨.

&lt;ul&gt;
&lt;li&gt;선택적 속성&lt;/li&gt;
&lt;li&gt;미 설정시 Host 값이 Hostname으로 사용됨&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;User: 네트웍 커넥션에 사용되는 계정 명&lt;/li&gt;
&lt;li&gt;Port: 원격 ssh 데몬이 사용하는 포트, 기본 값=22&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;네트웍-설정:0984e7ebd3dce43c74ff94df48f1ae75&#34;&gt;네트웍 설정&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;ServerAliveInterval

&lt;ul&gt;
&lt;li&gt;서버에 테스트 패킷을 전송하는 주기 설정&lt;/li&gt;
&lt;li&gt;초단위 설정&lt;/li&gt;
&lt;li&gt;기본 값: 0&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ServerAliveCountMax

&lt;ul&gt;
&lt;li&gt;서버에 테스트용 패킷을 전송하는 횟수를 설정&lt;/li&gt;
&lt;li&gt;서버에 추가적인 데이터 전송 없이 ServerAliveInterval의 최대 임계 값을 초과할 경우 커넥션 종료&lt;/li&gt;
&lt;li&gt;기본값: 3&lt;/li&gt;
&lt;li&gt;예: ServerAliveInterval 15, ServerAliveCountMax 3

&lt;ul&gt;
&lt;li&gt;통신없이 45초 결과후 커넥션 종료&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;LogLevel

&lt;ul&gt;
&lt;li&gt;클라이언트 측의 로그 레벨&lt;/li&gt;
&lt;li&gt;최소 로그: QUIET&lt;/li&gt;
&lt;li&gt;최대 로그: DEBUG3&lt;/li&gt;
&lt;li&gt;설정 가능 값

&lt;ul&gt;
&lt;li&gt;QUIET&lt;/li&gt;
&lt;li&gt;FATAL&lt;/li&gt;
&lt;li&gt;ERROR&lt;/li&gt;
&lt;li&gt;INFO&lt;/li&gt;
&lt;li&gt;VERBOSE&lt;/li&gt;
&lt;li&gt;DEBUG1&lt;/li&gt;
&lt;li&gt;DEBUG2&lt;/li&gt;
&lt;li&gt;DEBUG3&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;StrictHostKeyChecking

&lt;ul&gt;
&lt;li&gt;~/.ssh/known_hosts에 자동으로 호스트를 추가하는 설정&lt;/li&gt;
&lt;li&gt;기본 설정은 저장을 질문 함&lt;/li&gt;
&lt;li&gt;비활성 설정: &amp;ldquo;no&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;UserKnownHostsFile

&lt;ul&gt;
&lt;li&gt;연결된 호스트에 대한 정보를 남기는 파일을 지정하는 설정&lt;/li&gt;
&lt;li&gt;기본 값: ~/.ssh/known_hosts&lt;/li&gt;
&lt;li&gt;일반적으로 이 설정을 변경하지 않음&lt;/li&gt;
&lt;li&gt;StrictHostKeyChecking을 &amp;ldquo;no&amp;rdquo;로 설정할 경우에 이 설정을 &amp;ldquo;/dev/null&amp;rdquo;로 설정ㄱㄷ유&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;VisualHostKey

&lt;ul&gt;
&lt;li&gt;원격지의 호스트 키를 클라이언트 접속시 출력&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Compression

&lt;ul&gt;
&lt;li&gt;느린 네트웍 상에서 네트웍 패킷을 압축하는 옵션&lt;/li&gt;
&lt;li&gt;일반적인 상황에서 사용하지 않음&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;키-지정:0984e7ebd3dce43c74ff94df48f1ae75&#34;&gt;키 지정&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;IdentityFile

&lt;ul&gt;
&lt;li&gt;Host 별로 사용할 키의 위치를 지정&lt;/li&gt;
&lt;li&gt;기본값: 프로토콜에 따라 결정 됨

&lt;ul&gt;
&lt;li&gt;~/.ssh/id_rsa&lt;/li&gt;
&lt;li&gt;~/.ssh/id_dsa&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;multiplexing:0984e7ebd3dce43c74ff94df48f1ae75&#34;&gt;Multiplexing&lt;/h3&gt;

&lt;p&gt;ssh는 하나의 서버에 접속하는 여러 ssh 커넥션을 하나의 TCP 커넥션을 사용하여 연결하는 기능을 제공합니다.
복수의 SSH 커넥션으로 발생하는 부하를 제거하는 용도로 적합&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ControlMaster

&lt;ul&gt;
&lt;li&gt;Multiplexing을 허용하는 옵션&lt;/li&gt;
&lt;li&gt;허용 설정 값: auto&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ControlPath

&lt;ul&gt;
&lt;li&gt;커넥션을 제어하는 용도로 사용하는 socket 파일 지정&lt;/li&gt;
&lt;li&gt;/path/to/socket/%r@%h:%p

&lt;ul&gt;
&lt;li&gt;r: username&lt;/li&gt;
&lt;li&gt;h: remote host&lt;/li&gt;
&lt;li&gt;p: port&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ControlPersist

&lt;ul&gt;
&lt;li&gt;커넥션이 유지해야 할 시간을 초단위로 지정&lt;/li&gt;
&lt;li&gt;초단위 설정&lt;/li&gt;
&lt;li&gt;낮은 값을 설정할 경우 불필요한 커넥션 연결 오픈을 방지할 수 있음&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>