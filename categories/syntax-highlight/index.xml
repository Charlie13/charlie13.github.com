<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Syntax Highlight on taewan&#39;s blog</title>
    <link>http://taewan.kim/categories/syntax-highlight.html</link>
    <description>Recent content in Syntax Highlight on taewan&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 Jan 2016 17:19:38 +0900</lastBuildDate>
    <atom:link href="http://taewan.kim/categories/syntax-highlight.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hugo의 Syntax Highlight기능 구성</title>
      <link>http://taewan.kim/blog/2016/01/25/codehighlight/</link>
      <pubDate>Mon, 25 Jan 2016 17:19:38 +0900</pubDate>
      
      <guid>http://taewan.kim/blog/2016/01/25/codehighlight/</guid>
      <description>

&lt;p&gt;현재 taewan.kim은 블러그 생성 엔진으로 Hugo를 테마로는 Hyde-x를 사용하고 있습니다.
제가 Hugo를 처음 사용하면서 가장 혼동된 부분은 Syntax Hightlight를 구성하는 과정이었습니다.
Hugo에 대한 배경 지식이 부족하다 보니 Hugo의 Syntax Hightlight 기능에 대한 혼돈이 있었습니다.
이 부분에 대하여 간략히 정리해 보겠습니다.&lt;/p&gt;

&lt;h1 id=&#34;hugo의-syntax-highlight기능-지원-타입:8249a9659163c14ad6dd21231787110e&#34;&gt;Hugo의 Syntax Highlight기능 지원 타입&lt;/h1&gt;

&lt;p&gt;Hugo는 서버사이드 모드와 클라이언트 모드로 Syntax Highlight기능을 제공합니다.
서버사이드/클라이언트 모드는 Hugo의 config 파일에서 설정 됩니다.&lt;/p&gt;

&lt;h2 id=&#34;서버사이드-모드의-syntax-highlight:8249a9659163c14ad6dd21231787110e&#34;&gt;서버사이드 모드의 Syntax Highlight&lt;/h2&gt;

&lt;p&gt;서버사이드 모드는 빌드 시점에 Syntax Hightlight가 적용된 HTML을 생성하는 방식으로 pygments를 사용합니다.
pygments는 파이썬으로 만들어진 툴로 일반 코드에 syntax highlight를 적용하는 툴입니다.
서버사이드 모드를 사용하기 위해서는 hugo 빌드에 앞서 pygments가 사전에 설치되어 있어야 합니다.(pip install pygments)&lt;/p&gt;

&lt;h2 id=&#34;클라이언트-모드의-syntax-highlight:8249a9659163c14ad6dd21231787110e&#34;&gt;클라이언트 모드의 Syntax Highlight&lt;/h2&gt;

&lt;p&gt;클라이언트 모드는 브라우저에서 페이지를 로딩할 때 Syntax Highlight가 적용되는 방식으로,
다음과 같은 라이브러리를 사용합니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Highlight.js&lt;/li&gt;
&lt;li&gt;Prism&lt;/li&gt;
&lt;li&gt;Rainbow&lt;/li&gt;
&lt;li&gt;Syntax Highlighter&lt;/li&gt;
&lt;li&gt;Google Prettify&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;클라이언트-모드와-서버-모드의-syntax-highlight-기능-지원:8249a9659163c14ad6dd21231787110e&#34;&gt;클라이언트 모드와 서버 모드의 Syntax Highlight 기능 지원&lt;/h2&gt;

&lt;p&gt;Hugo는 두가지 모드에 대하여 적합한 변환을 Hugo 빌드 시 적용합니다.
그러나 두 변환 방식 중 어떤 것을 사용할 것인가는 일반적으로 테마가 결정합니다.
일반적으로 Theme의 README.md파일에 보면 어떤 방식을 지원하는지에 대한 설명이 기술되어 있습니다.&lt;/p&gt;

&lt;p&gt;현재 사용하고 있는 Hyde-X는 클라이언트 모드 만을 지원합니다.
Hyde-X는 Hightlight.js를 이용하여 Highlight기능을 구현합니다.
사실 Hyde-X가 서버사이드 모드도 지원하지만, 최종 빌드된 결과가 투박하고 가독성이 떨어집니다.
따라서 Hyde-x를 사용할 경우에는 클라이언트 모드를 사용하는 것이 효과적입니다.&lt;/p&gt;

&lt;h2 id=&#34;각-모드-별-설정-옵션-및-표기법:8249a9659163c14ad6dd21231787110e&#34;&gt;각 모드 별 설정 옵션 및 표기법&lt;/h2&gt;

&lt;h3 id=&#34;클라이언트-모드:8249a9659163c14ad6dd21231787110e&#34;&gt;클라이언트 모드&lt;/h3&gt;

&lt;p&gt;클라이언트 모드 설정은 config 파일에 highlight 속성으로 표시합니다.
highlight에 설정 가능한 값은 &lt;hugo_site&gt;/themes/static/css/highlight에서 확인 할 수 있습니다.
다음은 설정 예입니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; # Check the static/css/highlight directory for options.
 highlight = &amp;quot;github&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;~~~java
public static void main(String args[]){

}
~~~
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;위 설정에 대한 결과는 다음과 같습니다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public static void main(String args[]){

}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;서버사이드-모드:8249a9659163c14ad6dd21231787110e&#34;&gt;서버사이드 모드&lt;/h3&gt;

&lt;p&gt;설정 옵션은 다음과 같습니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pygmentsstyle = &amp;quot;monokai&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;유효한 설정 값은 &lt;a href=&#34;http://pygments.org/&#34;&gt;http://pygments.org/&lt;/a&gt; 에서 확인 할 수 있습니다.&lt;/p&gt;

&lt;h2 id=&#34;삽질-요약:8249a9659163c14ad6dd21231787110e&#34;&gt;삽질 요약&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Hugo는 클라이언트 모드와 서버사이드 모드의 Highlight를 지원한다.&lt;/li&gt;
&lt;li&gt;두 모드 중에서 사용 가능한 방식은 현재 사이트의 적용 테마가 결정한다.&lt;/li&gt;
&lt;li&gt;테마가 클라이언트 모드를 지원할 경우, highlisht 스타일은 static/css/highlight에서 확인 가능하다.&lt;/li&gt;
&lt;li&gt;테마가 서버사이드 모드를 지원할 경우, hugo 빌드를 수행하는 곳에는 pygments가 설치되어 있어야 한다.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>