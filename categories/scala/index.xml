<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scala on taewan&#39;s blog</title>
    <link>http://taewan.kim/categories/scala.html</link>
    <description>Recent content in Scala on taewan&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Mar 2016 17:57:42 +0900</lastBuildDate>
    <atom:link href="http://taewan.kim/categories/scala.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Problem NintyNine for Scala</title>
      <link>http://taewan.kim/documents/Problem-NintyNine4Scala.html</link>
      <pubDate>Fri, 25 Mar 2016 17:57:42 +0900</pubDate>
      
      <guid>http://taewan.kim/documents/Problem-NintyNine4Scala.html</guid>
      <description>

&lt;p&gt;prolog 학습 자료인 &amp;ldquo;P-99: Ninety-Nine Prolog Problems&amp;rdquo;의 스칼라 버전 입니다.
&amp;ldquo;P-99: Ninety-Nine Prolog Problems&amp;rdquo;는 Prolog의 학습을 지원하기 위한 연습문제 성격입니다.
Prolog버전의 연습문제를 Scala 버전으로 변경하여 제공하는 내용을 정리하는 페이지 입니다.
&amp;ldquo;P-99: Ninety-Nine Prolog Problems&amp;rdquo;은 홈페이지는 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sites.google.com/site/prologsite/prolog-problems&#34;&gt;https://sites.google.com/site/prologsite/prolog-problems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;ldquo;P-99: Ninety-Nine Prolog Problems&amp;rdquo;은 7개 카테고리로 구성되며, 스칼라 버전의 변환은
aperiodic.net을 참조하여 정리하였습니다.&lt;/p&gt;

&lt;h2 id=&#34;해당-문제의-답안은-문제-번호에-설정된-링크로-확인-할-수-있습니다:08dbffc5775114b4d4832a173849c143&#34;&gt;해당 문제의 답안은 문제 번호에 설정된 링크로 확인 할 수 있습니다.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;카테고리 구성

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#list&#34;&gt;List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#arithmetic&#34;&gt;Arithmetic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#logic&#34;&gt;Logic and Codes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#binarytrees&#34;&gt;Binary Trees&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#multiwaytrees&#34;&gt;Multiway Trees&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#graphs&#34;&gt;Graphs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#miscellaneous&#34;&gt;Miscellaneous&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a id=&#34;list&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;1-list:08dbffc5775114b4d4832a173849c143&#34;&gt;1. List&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://taewan.kim/documents/prolog99/problem-01.html&#34;&gt;S-01&lt;/a&gt;: 리스트의 마지막 엘리먼트를 구하시오?

&lt;ul&gt;
&lt;li&gt;예제 코드&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;scala&amp;gt; last(List(1, 1, 2, 3, 5, 8))
res0: Int = 8
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://taewan.kim/documents/prolog99/problem-02.html&#34;&gt;S-02&lt;/a&gt;: 리스트의 끝에서 두번째 엘리먼트를 구하시오?

&lt;ul&gt;
&lt;li&gt;예제 코드&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;scala&amp;gt; penultimate(List(1, 1, 2, 3, 5, 8))
res0: Int = 5
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://taewan.kim/documents/prolog99/problem-NotYet.html&#34;&gt;S-03&lt;/a&gt;: 리스트의 k번째 엘리먼트를 구하시오?

&lt;ul&gt;
&lt;li&gt;리스트의 첫 번째 엘리먼트는 0.&lt;/li&gt;
&lt;li&gt;예제 코드&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;scala&amp;gt; nth(2, List(1, 1, 2, 3, 5, 8))
res0: Int = 2
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://taewan.kim/documents/prolog99/problem-NotYet.html&#34;&gt;S-04&lt;/a&gt;: 리스트의 엔리먼트 사이즈를 구하시오?

&lt;ul&gt;
&lt;li&gt;예제 코드&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;scala&amp;gt; length(List(1, 1, 2, 3, 5, 8))
res0: Int = 6
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a id=&#34;arithmetic&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;2-arithmetic:08dbffc5775114b4d4832a173849c143&#34;&gt;2. Arithmetic&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a id=&#34;logic&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;3-logic:08dbffc5775114b4d4832a173849c143&#34;&gt;3. Logic&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a id=&#34;binarytrees&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;4-binary-trees:08dbffc5775114b4d4832a173849c143&#34;&gt;4. Binary Trees&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a id=&#34;multiwaytrees&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;5-multiway-trees:08dbffc5775114b4d4832a173849c143&#34;&gt;5. Multiway Trees&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a id=&#34;graphs&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;6-graphs:08dbffc5775114b4d4832a173849c143&#34;&gt;6. Graphs&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a id=&#34;miscellaneous&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;7-miscellaneous:08dbffc5775114b4d4832a173849c143&#34;&gt;7. Miscellaneous&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Scala Exercises - Series (1)</title>
      <link>http://taewan.kim/blog/2016/03/18/prog-problems-01/</link>
      <pubDate>Fri, 18 Mar 2016 01:18:18 +0900</pubDate>
      
      <guid>http://taewan.kim/blog/2016/03/18/prog-problems-01/</guid>
      <description>

&lt;h2 id=&#34;문서상태:da945fcb0d0477d4f89828ad0783ee93&#34;&gt;문서상태&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;현재 작업중&amp;hellip;..&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;시작하며:da945fcb0d0477d4f89828ad0783ee93&#34;&gt;시작하며&lt;/h2&gt;

&lt;p&gt;스위스의 Bern University에서는 Prolog의 교육을 목적으로 99개의 문제와 각 문제에 대한 풀이법을 제공합니다. (&lt;a href=&#34;https://sites.google.com/site/prologsite/&#34;&gt;https://sites.google.com/site/prologsite/&lt;/a&gt;) 이 사이트에서 제공하는 99개의 문제를 풀어가는 과정은 Prolog에대한 이해를 높이고 친숙해지는 가장 효율적인 방법이라고 생각됩니다. 최근에 Scala를 처음 접하는 과정에서 스칼라를 언어적으로 연습하고 연마할 적절한  대상이 부족하다는 아쉬움이 많았습니다. 최근에 Prolog 99을 스칼라 버전으로 변환한 &lt;a href=&#34;http://aperiodic.net을&#34;&gt;http://aperiodic.net을&lt;/a&gt; 발견하였습니다. 이 사이트에서는 Prolog 99을 스칼라 버전으로 변환한 문제와 풀이를 제공합니다. 이 사이트에서 제공하는 스칼라 버전의 Prolog 99은 스칼라 학습 및 연습에 유용하게 사용될 수 있있습니다. 이 문제 풀이는 스칼라에 대한 이해를 높일 수 있는 효과적인 컨텐츠 입니다.&lt;/p&gt;

&lt;h3 id=&#34;prolog-problems의-구성:da945fcb0d0477d4f89828ad0783ee93&#34;&gt;Prolog Problems의 구성&lt;/h3&gt;

&lt;p&gt;&amp;ldquo;P-99: Ninety-Nine Prolog Problems&amp;rdquo;는 7개의 카테고리 99개 문제로 구성되어 있습니다. 7개의 카테고리는 다음과 같습니다&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Prolog Lists (28개)&lt;/li&gt;
&lt;li&gt;Arithmetic (11개)&lt;/li&gt;
&lt;li&gt;Logic and codes (5개)&lt;/li&gt;
&lt;li&gt;Binary Trees (18개)&lt;/li&gt;
&lt;li&gt;Multiway Trees (6개)&lt;/li&gt;
&lt;li&gt;Graphs (11개)&lt;/li&gt;
&lt;li&gt;Miscellaneous (9개)&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;prolog-lists:da945fcb0d0477d4f89828ad0783ee93&#34;&gt;Prolog Lists&lt;/h2&gt;

&lt;h3 id=&#34;1-01:da945fcb0d0477d4f89828ad0783ee93&#34;&gt;1.01&lt;/h3&gt;

&lt;p&gt;1&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[47 Degrees] scala exercises</title>
      <link>http://taewan.kim/blog/2015/03/20/scala_exercises/</link>
      <pubDate>Fri, 20 Mar 2015 11:49:56 +0900</pubDate>
      
      <guid>http://taewan.kim/blog/2015/03/20/scala_exercises/</guid>
      <description>

&lt;p&gt;47 Degrees(47deg.com)에서 운영하는 Scala Exercise에 대한 정리입니다. Scala Exercise는 42개 목록으로 구성되어 있습니다. 각 타이틀에 대한 요약을 remark.js와 worksheet 프로젝트로 정리하겠습니다. 각 항목에 대한 정리 내용은 현재 페이지에서 링크로 정리하겠습니다.&lt;/p&gt;

&lt;h2 id=&#34;변경-로그:164bfe7ab04dfe68df0663755834b87d&#34;&gt;변경 로그&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;2016.03.20: 정리 시작&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;scala-exercise:164bfe7ab04dfe68df0663755834b87d&#34;&gt;Scala Exercise&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Assets: summary, code&lt;/li&gt;
&lt;li&gt;Val and Var&lt;/li&gt;
&lt;li&gt;Classes&lt;/li&gt;
&lt;li&gt;Options&lt;/li&gt;
&lt;li&gt;Objects&lt;/li&gt;
&lt;li&gt;Tuples&lt;/li&gt;
&lt;li&gt;High Order Functions&lt;/li&gt;
&lt;li&gt;Lists&lt;/li&gt;
&lt;li&gt;Maps&lt;/li&gt;
&lt;li&gt;Sets&lt;/li&gt;
&lt;li&gt;Formatting&lt;/li&gt;
&lt;li&gt;Pattern Matching&lt;/li&gt;
&lt;li&gt;Case Classes&lt;/li&gt;
&lt;li&gt;Range&lt;/li&gt;
&lt;li&gt;Partially Applied Functions&lt;/li&gt;
&lt;li&gt;Implicits&lt;/li&gt;
&lt;li&gt;Traits&lt;/li&gt;
&lt;li&gt;For Expressions&lt;/li&gt;
&lt;li&gt;Infix, Prefix and Postfix&lt;/li&gt;
&lt;li&gt;Operators&lt;/li&gt;
&lt;li&gt;Infix Types&lt;/li&gt;
&lt;li&gt;Mutable Maps&lt;/li&gt;
&lt;li&gt;Mutable Sets&lt;/li&gt;
&lt;li&gt;Sequences and Arrays&lt;/li&gt;
&lt;li&gt;Iterables&lt;/li&gt;
&lt;li&gt;Traversables&lt;/li&gt;
&lt;li&gt;Named and Default Arguments&lt;/li&gt;
&lt;li&gt;Mainfests&lt;/li&gt;
&lt;li&gt;Preconditions&lt;/li&gt;
&lt;li&gt;Extrators&lt;/li&gt;
&lt;li&gt;ByName Parameter&lt;/li&gt;
&lt;li&gt;Repeated Parameters&lt;/li&gt;
&lt;li&gt;Parent Classes&lt;/li&gt;
&lt;li&gt;Empty Values&lt;/li&gt;
&lt;li&gt;Type Signatures&lt;/li&gt;
&lt;li&gt;Uniform Access Principle&lt;/li&gt;
&lt;li&gt;Literal Booleans&lt;/li&gt;
&lt;li&gt;Literal Numbers&lt;/li&gt;
&lt;li&gt;Literal Strings&lt;/li&gt;
&lt;li&gt;Type Variance&lt;/li&gt;
&lt;li&gt;Enumerations&lt;/li&gt;
&lt;li&gt;Constructions&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>