<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tip on taewan.kim</title>
    <link>taewan.kim/categories/tip/</link>
    <description>Recent content in Tip on taewan.kim</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Apr 2016 13:47:07 +0900</lastBuildDate>
    
	<atom:link href="taewan.kim/categories/tip/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>마크다운 사용법 - Quick Start</title>
      <link>taewan.kim/post/markdown/</link>
      <pubDate>Mon, 04 Apr 2016 13:47:07 +0900</pubDate>
      
      <guid>taewan.kim/post/markdown/</guid>
      <description>taewan.kim은 대부분의 내용을 markdown으로 관리하고 있습니다. markdown은 직관적이고 간단한 문법으로 컨텐츠 관리에 매우 효과적입니다. markdown에서 주로 이용되는 테그는 15개정도 입니다. 혼동되는 주요 테그를 정리하겠습니다.
 목차   헤더 수평선 텍스트 출력 텍스트 강조 인용 목록 코드 테이블 링크 이미지 주석 각주   헤더  (top) H1 ~ H6까지 테그를 #으로 표현
# 헤더 스타일 (h1) ## 헤더 스타일 (h2) ### 헤더 스타일 (h3) #### 헤더 스타일 (h4) ##### 헤더 스타일 (h5) ###### 헤더 스타일 (h6)   출력 결과  헤더 스타일 (h1) 헤더 스타일 (h2) 헤더 스타일 (h3) 헤더 스타일 (h4) 헤더 스타일 (h5) 헤더 스타일 (h6)  효과: 다음과 같은 코드와 동일한 결과가 됨  &amp;lt;h1&amp;gt;헤더 스타일 (h1)&amp;lt;/h1&amp;gt; &amp;lt;h2&amp;gt;헤더 스타일 (h2)&amp;lt;/h2&amp;gt; &amp;lt;h3&amp;gt;헤더 스타일 (h3)&amp;lt;/h3&amp;gt; &amp;lt;h4&amp;gt;헤더 스타일 (h4)&amp;lt;/h4&amp;gt; &amp;lt;h5&amp;gt;헤더 스타일 (h5)&amp;lt;/h5&amp;gt; &amp;lt;h6&amp;gt;헤더 스타일 (h6)&amp;lt;/h6&amp;gt;  수평선  (top)  &amp;lt;hr /&amp;gt;와 동일한 결과를 출력 &amp;rsquo;-&amp;lsquo;, &amp;lsquo;*&amp;lsquo;, &amp;lsquo;_&amp;lsquo;을 세개 이상 나열하면 수평선을 만듦 단락 나누기 용도로 많이 사용.</description>
    </item>
    
    <item>
      <title>youtube 관련 팁 정리</title>
      <link>taewan.kim/post/youtube/</link>
      <pubDate>Fri, 25 Mar 2016 00:17:44 +0900</pubDate>
      
      <guid>taewan.kim/post/youtube/</guid>
      <description>Youtube 관련 몇 가지 팁을 정리합니다. 동영상 다운로드, 반복재생, 특정 위치 URL공유하기 등의 방법을 소개합니다.
 문서 구성  Youtube 동영상 다운로드 동영상 반복 재생 동영상 특정 위치 공유 나중에 볼 동영상 관리   
Youtube 동영상 다운로드   Youtube URL에 ss를 추가하면 다운로드 사이트로 이동  이동한 사이트에서 동영상 다운로드  관련 예  Original URL: https://www.youtube.com/watch?v=kpfRSQv4zm4 Download URL: https://ssyoutube.com/watch?v=kpfRSQv4zm4   
동영상 반복 재생  youtube 동영상 위에서 context menu를 수행하여 &amp;ldquo;연속재생(loop)&amp;rdquo; 선택</description>
    </item>
    
    <item>
      <title>세미나 퀴즈: 다음 데이터를 정규화하시요!</title>
      <link>taewan.kim/post/question/</link>
      <pubDate>Wed, 23 Mar 2016 14:01:55 +0900</pubDate>
      
      <guid>taewan.kim/post/question/</guid>
      <description>다음 데이터를 이용하여 제 3 정규화가 완료된 ERD를 작성하시오.</description>
    </item>
    
    <item>
      <title>remark를 이용한 웹 프리젠테이션</title>
      <link>taewan.kim/post/remarkjs/</link>
      <pubDate>Tue, 22 Mar 2016 10:23:15 +0900</pubDate>
      
      <guid>taewan.kim/post/remarkjs/</guid>
      <description>PPT를 공유하는 Slideshare 서비스가 있기는 하지만, 웹 상에서 내가 직접 제어와 공유가 가능한 순수 HTML기반의 웹 프리젠테이션에 대한 필요성을 느껴왔씁니다. 오픈소스로 다수의 웹 프리젠테이션 기술 중에서 하나를 선택하라면 remark를 선택하겠습니다.
remark의 장점은 다음과 같습니다.
 순수 HTML 기술이다. 슬라이드 데이터는 Markdown 포멧을 사용한다. PPT의 기본 레이아웃 지원에 충실하다. 사용법이 간단하다. Syntax Highlight 기능을 잘 지원한다. Latex를 지원한다. Graph를 지원한다.  반면 단점을 꼽으라면 Animation 효과가 지원되지 않는다는 것입니다. 개인적으로 Animation 효과보다는 프리젠테이션 구성 지원과 문서 작성 편리성을 중시하는 관계로 제 경우에는 이 단점이 크게 작용하지 않았습니다.</description>
    </item>
    
    <item>
      <title>OS별 bit 확인 방법</title>
      <link>taewan.kim/post/os_bit/</link>
      <pubDate>Wed, 27 Jan 2016 10:50:36 +0900</pubDate>
      
      <guid>taewan.kim/post/os_bit/</guid>
      <description>2011년 4월 6일에 http://devtainer.blogspot.kr/에서 섰던 글입니다. 추억 팔이로 옮겨 놓습니다. 2011년 추억 속으로&amp;hellip;. - 원문: http://devtainer.blogspot.kr/2011/04/os-bit.html
맥, 리눅스, AIX 운영체제의 bit를 확인하는 방법을 정리해 보았습니다.
Linux 리눅스의 경우 uname 명령어로 간단히 확인 가능 합니다. &amp;ldquo;uname -a&amp;rdquo; 명령어로 현재 운영체제의 비트를 확인할 수 있습니다.
AIX AIX에서는 getconf명령어와 /usr/lib/boot/unix*에 대한 file 명령를 통해서 bit를 확인 할 수 있습니다. 다음은 64비트 운영환경에서 테스트한 결과 입니다. 운영체제가 32비트이면 결과는 32로 표시될 것입니다.
[ ONLINE Mode ]&amp;gt;getconf -a | grep KERN KERNEL_BITMODE: 64 [ ONLINE Mode ]&amp;gt;file /usr/lib/boot/unix* /usr/lib/boot/unix: 64-bit XCOFF executable or object module not stripped /usr/lib/boot/unix_64: 64-bit XCOFF executable or object module not stripped  Mac OS X sysctl명령어로 운영체제 비트 정보를 확인할 수 있습니다.</description>
    </item>
    
    <item>
      <title>Log4J 로깅 비용 계산</title>
      <link>taewan.kim/post/log4j_perf/</link>
      <pubDate>Sun, 03 Jan 2016 00:17:44 +0900</pubDate>
      
      <guid>taewan.kim/post/log4j_perf/</guid>
      <description>2006년 4월 30일에 이글루스 블로그에서 섰던 글입니다. 추억 팔이로 옮겨 놓습니다. 2006년 추억 속으로&amp;hellip;. - 원문: http://okcode.egloos.com/1892085
기존의 System.out.println()으로 로그를 남길 때 발생하는 문제의 대안으로 Log4J를 요즘 많이 사용한다.
Log4J를 사용하면 OutputStream에서 발생하는 자원독점 문제 해결, logging 레벨 설정을 코드와 분리, 로그 출력 방식 설정 변경 등 다양한 이점을 얻을 수 있다.
그러나 Log4J가 실행될 때 발행하는 비용을 계산해 보면 Log4J를 사용할 때 주의가 필요하다. 무작정 사용하는 것은 WAS 전체에 심각한 문제를 발생시킬 수 있다.</description>
    </item>
    
    <item>
      <title>Tomcat 5.0 ~ 7.0 한글 인코딩 설정</title>
      <link>taewan.kim/post/tomcat_encoding/</link>
      <pubDate>Mon, 01 Aug 2011 10:50:36 +0900</pubDate>
      
      <guid>taewan.kim/post/tomcat_encoding/</guid>
      <description>2011년 8월 1일에 devtainer.blogspot.kr 에서 섰던 글입니다. 추억 팔이로 옮겨 놓습니다. 2011년 추억 속으로&amp;hellip;. - 원문: http://devtainer.blogspot.kr/2011/08/tomcat-50-70.html
한동안 Tomcat을 사용하지 않다가 오랜만에 사용했더니 인코딩 관련 착각을 해서 한참을 삽질 했습니다. 한글 인코딩에 대하여 간략하게 정리합니다.
톰켓의 기본 인코딩은 ISO-8859-1 입니다. 따라서 한글을 정상적으로 처리하기 위해서는 추가적인 인코딩 설정이 필요합니다. 인코딩 설정은 http get 메서드와 http post 메서드를 개별적으로 설정합니다.
HTTP Get 메서드 인코등 설정  [TOMCAT_HOME]/conf/server.xml 수정 Connector port=&amp;ldquo;8080&amp;rdquo; 엘레먼트에 URIEncoding=&amp;ldquo;UTF-8&amp;rdquo; 속성 추가  &amp;lt;connector port=&amp;quot;8080&amp;quot; protocol=&amp;quot;HTTP/1.</description>
    </item>
    
    <item>
      <title>sudo 사용자 등록 (in CentOS)</title>
      <link>taewan.kim/post/sudo_in_centos/</link>
      <pubDate>Wed, 16 Mar 2011 14:01:55 +0900</pubDate>
      
      <guid>taewan.kim/post/sudo_in_centos/</guid>
      <description>일반 사용자가 루트 권한을 획득하기 위해서는 su 명령을 사용해야 합니다. 사실 매번 루트 권한을 얻기 위해서 su를 수행하는 것은 불편하죠. Ubunto를 사용할 때 가장 편 리한 명령은 아마도 sudo일 것입니다. sudo는 일반사용자가 루트 권한을 임시적으로 획득하여 특정 명령을 할 수 있도록 합니다.
Ubuntu에서는 처음부터 일반 사용자가 sudo를 사용할 수 있도록 되어 있지만 CentOS &amp;gt;등 다른 리눅스 배포판에서는 sudo를 기본적으로 사용할 수 없도록 되어 있습니다.
[was@centos ~]$ sudo more /etc/sysctl.conf [sudo] password for was: was is not in the sudoers file.</description>
    </item>
    
    <item>
      <title>JUnit 4.x 어노테이션</title>
      <link>taewan.kim/post/junit4_annotation/</link>
      <pubDate>Tue, 09 Nov 2010 10:50:36 +0900</pubDate>
      
      <guid>taewan.kim/post/junit4_annotation/</guid>
      <description>2010년 11월 9일에 http://devtainer.blogspot.kr/에서 섰던 글입니다. 추억 팔이로 옮겨 놓습니다. 2010년 추억 속으로&amp;hellip;. - 원문: http://devtainer.blogspot.kr/2010/11/junit-4x.html
JUnit4의 주요 어노테이션을 정리해 보았습니다. 별것 아닌것 같아도 막상 사용해 보면 헛갈리기 쉬운것 같습니다. Junit4의 주요 어노테이션은 다음과 같습니다.
Junit 4 테스트 클래스 작성 JUnit4에서는 POJO 형태로 단위 테스트 클래스가 정의 됩니다. 단위 테스트 대상 메소드는 @Test를 통해서 정의 됩니다. 또한 단위 테스트 앞뒤에 초기화와 정리를 수행하는 메소드를 지정할 수 있습니다. 추가적으로 클래스 실행 앞뒤에 초기화와 정리를 수행하는 메서드를 정의 할 수 있습니다.</description>
    </item>
    
    <item>
      <title>Jersey License: CDDL 1.1 &amp; GPL 2</title>
      <link>taewan.kim/post/jersey_license_gpl2_cddl1.1/</link>
      <pubDate>Thu, 21 Oct 2010 10:50:36 +0900</pubDate>
      
      <guid>taewan.kim/post/jersey_license_gpl2_cddl1.1/</guid>
      <description>2010년 10월 21일에 http://devtainer.blogspot.kr/ 에서 섰던 글입니다. 추억 팔이로 옮겨 놓습니다. 2010년 추억 속으로&amp;hellip;. - 원문: http://devtainer.blogspot.kr/2010/10/jersey.html
RESTFul를 구현할때 Jersey를 많이 사용합니다. 아무래도 JAX-RS 중에서 문서화나 프레임웍 완성도가 가장 높은것은 Jersey라고 생각합니다. (Grizzly 서버와 테스팅 통합 기능이 굉장하죠&amp;hellip;)
그러나 약간 사용하기 애매했던 부분은 라이센스 였습니다. Jersey의 라이센스에 대해서는 Jersey 홈페이지(https://jersey.dev.java.net/)에 다음과 같이 명시하고 있습니다.
 We also use the same two licenses - CDDL 1.1 and GPL 2 with CPE - so, you can pick which one suites your needs better.</description>
    </item>
    
  </channel>
</rss>