<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Backpropagation on taewan.kim</title>
    <link>/tags/backpropagation/</link>
    <description>Recent content in Backpropagation on taewan.kim</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Dec 2017 21:28:14 +0900</lastBuildDate>
    
	<atom:link href="/tags/backpropagation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Backpropagation를 위한 편미분 과정에서 행렬 Transpose의 발생 이유?</title>
      <link>/post/backpropagation_matrix_transpose/</link>
      <pubDate>Wed, 20 Dec 2017 21:28:14 +0900</pubDate>
      
      <guid>/post/backpropagation_matrix_transpose/</guid>
      <description>Backpropagation을 직접 구현하는 과정에서 이유를 알 수 없는 갑작스런 행렬 Transpose와 관련된 의구심이 오랜기간 절 괴롭혔습니다. 그 의문은 Cost Function을 해당 레이어의 W(가중치)로 편미분하여 현재 W를 수정하는 식을 유도하는 과정에서 일부 행렬이 전치행렬로 갑지기 변경되는 이유에 대한 궁금증이었습니다. 행렬이 전치(Transpose)되는 근거와 이유를 알수 없다는 답답함 이었습니다. 딥러닝 책이나 웹 문서를 찾아보면 &amp;ldquo;편미분 과정에서 적당히 행렬을 맞춰준다.&amp;ldquo;라는 표현으로 이 부분을 대충 넘어가고 있습니다. Backpropagation 미분 과정에서 행렬의 방향성(Transpose 할 것이나 말것이냐)은 어떻게 결정할 것인가라는 질문이었습니다.</description>
    </item>
    
    <item>
      <title>Hidden Layer의 오차 계산</title>
      <link>/post/error_in_hidden/</link>
      <pubDate>Fri, 08 Dec 2017 21:28:14 +0900</pubDate>
      
      <guid>/post/error_in_hidden/</guid>
      <description>Neural Network에서는 Forward Propagation 결과로 계산된 Output Layer 출력과 해당 입력 데이터 레이블의 차이를 계산하여 오차(손실, Error/Loss)를 계산합니다. 그리고 이 오차 최소화를 목표로 Hidden Layer들의 Weight(가중치)와 Bias(편향)를 업데이트합니다. 이렇게 딥러닝에서는 Neural Network에 데이터를 지속해서 흘려보내고, 오차를 계산한 후 Weight와 Bias를 수정하는 작업을 반복합니다.
Output Layer 출력과 레이블의 차이를 계산하고 은닉층의 Weight와 Bias를 업데이트하는 일련의 과정을 &amp;ldquo;역전파&amp;rdquo; 혹은 &amp;ldquo;Backpropagation&amp;ldquo;이라고 합니다. &amp;ldquo;Backpropagation&amp;ldquo;에서는 출력층의 오차로부터 은닉층의 노드별 오차를 계산하는 것이 핵심입니다. 은닉층의 노드별 오차를 알아야 은닉층의 Weight와 Bias를 수정할 수 있습니다.</description>
    </item>
    
  </channel>
</rss>