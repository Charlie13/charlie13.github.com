<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>taewan&#39;s blog</title>
    <link>http://taewan.kim/</link>
    <description>Recent content on taewan&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 31 Mar 2016 01:25:02 +0900</lastBuildDate>
    <atom:link href="http://taewan.kim/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>10.sets</title>
      <link>http://taewan.kim/documents/47degree4scala/10.sets.html</link>
      <pubDate>Thu, 31 Mar 2016 01:25:02 +0900</pubDate>
      
      <guid>http://taewan.kim/documents/47degree4scala/10.sets.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>08.lists</title>
      <link>http://taewan.kim/documents/47degree4scala/08.lists.html</link>
      <pubDate>Thu, 31 Mar 2016 01:24:45 +0900</pubDate>
      
      <guid>http://taewan.kim/documents/47degree4scala/08.lists.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>09.maps</title>
      <link>http://taewan.kim/documents/47degree4scala/09.maps.html</link>
      <pubDate>Thu, 31 Mar 2016 01:24:37 +0900</pubDate>
      
      <guid>http://taewan.kim/documents/47degree4scala/09.maps.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>07.highorder</title>
      <link>http://taewan.kim/documents/47degree4scala/07.highorder.html</link>
      <pubDate>Thu, 31 Mar 2016 01:23:46 +0900</pubDate>
      
      <guid>http://taewan.kim/documents/47degree4scala/07.highorder.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>06.tuples</title>
      <link>http://taewan.kim/documents/47degree4scala/06.tuples.html</link>
      <pubDate>Thu, 31 Mar 2016 01:23:30 +0900</pubDate>
      
      <guid>http://taewan.kim/documents/47degree4scala/06.tuples.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>05.objects</title>
      <link>http://taewan.kim/documents/47degree4scala/05.objects.html</link>
      <pubDate>Thu, 31 Mar 2016 01:23:10 +0900</pubDate>
      
      <guid>http://taewan.kim/documents/47degree4scala/05.objects.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>04.options</title>
      <link>http://taewan.kim/documents/47degree4scala/04.options.html</link>
      <pubDate>Thu, 31 Mar 2016 01:22:51 +0900</pubDate>
      
      <guid>http://taewan.kim/documents/47degree4scala/04.options.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>03.classes</title>
      <link>http://taewan.kim/documents/47degree4scala/03.classes.html</link>
      <pubDate>Thu, 31 Mar 2016 01:22:41 +0900</pubDate>
      
      <guid>http://taewan.kim/documents/47degree4scala/03.classes.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>02.valandvar</title>
      <link>http://taewan.kim/documents/47degree4scala/02.valandvar.html</link>
      <pubDate>Thu, 31 Mar 2016 01:22:23 +0900</pubDate>
      
      <guid>http://taewan.kim/documents/47degree4scala/02.valandvar.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>01. asserts</title>
      <link>http://taewan.kim/documents/47degree4scala/01.asserts.html</link>
      <pubDate>Thu, 31 Mar 2016 01:21:52 +0900</pubDate>
      
      <guid>http://taewan.kim/documents/47degree4scala/01.asserts.html</guid>
      <description>

&lt;h1 id=&#34;단정-함수:28be12209e2f94f4a685e9d6518a6d60&#34;&gt;단정 함수&lt;/h1&gt;

&lt;p&gt;ScalaTest는 3개의 단정문을 제공하며, 이 단정문은 모든 trait에서 기본적으로 사용 가능하다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;assert: 범용적 단정문&lt;/li&gt;
&lt;li&gt;assertResult: 실제 값과 예상 값을 식별&lt;/li&gt;
&lt;li&gt;intercept: 코드가 예고한 예외를 던지는 것을 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;모든 스칼라 프로그램에서 assert 메서드를 호출 할 수 있다. 이 메서드는 Boolean형을 파라미터로 취한다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;val left = 2
val right = 1
assert(left == right)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;전단한 표현식의 true이면 assert 메서드는 정상적으로 종료되지만, 반대로 false라면 assert 메서드는 AssertionError를 발생시키고 종료될 것이다. 이렇게 동작하는 assert 메서드는 Predef 객체에 정의되어 있다. Predef에 정의된 모든 멤버는 명시적으로 임포트하지 않아서 모든 스칼라 소스 파일이 기본적으로 임포트된다.&lt;/p&gt;

&lt;p&gt;ScalaTest는 DSL(Domain Specific Language)를 제공한다. 이 DSL을 사용하여 &amp;ldquo;should&amp;rdquo; 같은 단어를 사용하여 단정문을 표현 할 수 있다. ScalaTest의 동일성을 체크하는 다섯가지 방법을 제공한다. 이 각각의 방법은 각각 다른 요구사항을 해결하기 위해서 디자인 되었다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;result should equal (3) // Equality를 커스터마이징 할 수 있음
result should === (3)   // Equality를 커스터마이징 하고 타입 제약을 강제함
result should be (3)    // Equality를 커스터마이징 할 수 없음. 따라서 컴파일이 가장 빠름
result shouldEqual 3    // Equality를 커스터마이징 할 수 있음. 괄호가 필요 없음
result shouldBe 3       // Equality를 커스터마이징 할 수 없음. 따라서 컴파일이 가장 빠름. 괄호 필요 없음
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>My Learning</title>
      <link>http://taewan.kim/mylearning.html</link>
      <pubDate>Tue, 29 Mar 2016 11:07:44 +0900</pubDate>
      
      <guid>http://taewan.kim/mylearning.html</guid>
      <description>

&lt;p&gt;개인적으로 진행중인 스터디 내용을 기록합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;문서 구성

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#2016-Q1&#34;&gt;2016-Q1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a id=&#34;2016-Q1&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;2016년-1분기:1d12ebc575640a9d8a1ab30aafa39a95&#34;&gt;2016년 1분기&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;20160328: &lt;a href=&#34;http://taewan.kim/presentation/201603_python_ch09.html&#34;&gt;&amp;ldquo;파이썬프로그래밍 9장&amp;rdquo;-혜지원&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;파이썬 클래스 간략 요약&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>오라클 Big Data Lite 설치</title>
      <link>http://taewan.kim/blog/2016/03/28/installing_bigdatalite/</link>
      <pubDate>Mon, 28 Mar 2016 17:04:26 +0900</pubDate>
      
      <guid>http://taewan.kim/blog/2016/03/28/installing_bigdatalite/</guid>
      <description>

&lt;p&gt;오라클에서는 빅데이터 플랫폼의 테스트와 학습을 효과적으로 지원하는 것을 목표로 Oracle Big Data Lite를 제공합니다.
Oracle Big Data Lite는 Cloudera의 최신 CDH와 오라클 연계 솔루션을 하나의 VitrualBox 이미지에 담고 있습니다.
오라클 Big Data Lite는 빅데이터 소프트웨어에 대한 모든 설치와 구성이 완성된 상태로 배포되기 때문에, 하둡이 익숙하지 않은 엔지니어가 Hadoop Eco를 학습하기에 가장 이상적인 시작점입니다.&lt;/p&gt;

&lt;p&gt;오라클 Big Data Lite의 메인 페이지의 URL은 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.oracle.com/technetwork/database/bigdata-appliance/oracle-bigdatalite-2104726.html&#34;&gt;http://www.oracle.com/technetwork/database/bigdata-appliance/oracle-bigdatalite-2104726.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://taewan.kim/images/BigDataLite/01.otn_bigdatalite.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;오라클-big-data-lite-버전과-구성-컴포넌트:2dadf6bc939cbc50ba4be64b2cbf5c45&#34;&gt;오라클 Big Data Lite 버전과 구성 컴포넌트&lt;/h1&gt;

&lt;p&gt;2016년 2월 현재 오라클 Big Data Lite의 최신 버전은 4.4.0 입니다. 오라클 Big Data Lite는 VirtualBox 이미지 입니다. 이 가상 이미지에는 다음과 같은 소프트웨어가 포함되어 있습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Oracle Enterprise Linux 6.7&lt;/li&gt;
&lt;li&gt;Cloudera CDH 5.5.1&lt;/li&gt;
&lt;li&gt;Oracle Database 12c Release 1 Enterprise Edition (12.1.0.2)

&lt;ul&gt;
&lt;li&gt;옵션&lt;/li&gt;
&lt;li&gt;Oracle Big Data SQL&lt;/li&gt;
&lt;li&gt;Oracle Multitenant&lt;/li&gt;
&lt;li&gt;Advanced Analytics&lt;/li&gt;
&lt;li&gt;OLAP&lt;/li&gt;
&lt;li&gt;Oracle Partitioning&lt;/li&gt;
&lt;li&gt;Oracle Spatial and Graph&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Cloudera Manager (5.5.1)&lt;/li&gt;
&lt;li&gt;Oracle Big Data Spatial and Graph 1.1.2&lt;/li&gt;
&lt;li&gt;Oracle Big Data Discovery 1.1.1&lt;/li&gt;
&lt;li&gt;Oracle Big Data Connectors 4.4

&lt;ul&gt;
&lt;li&gt;Oracle SQL Connector for HDFS 3.4.0&lt;/li&gt;
&lt;li&gt;Oracle Loader for Hadoop 3.5.0&lt;/li&gt;
&lt;li&gt;Oracle Data Integrator 12c&lt;/li&gt;
&lt;li&gt;Oracle R Advanced Analytics for Hadoop 2.5.1&lt;/li&gt;
&lt;li&gt;Oracle XQuery for Hadoop 4.2.1&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Oracle NoSQL Database Enterprise Edition 12cR1 (3.5.2)&lt;/li&gt;
&lt;li&gt;Oracle JDeveloper 12c (12.1.3)&lt;/li&gt;
&lt;li&gt;Oracle SQL Developer and Data Modeler 4.1.3&lt;/li&gt;
&lt;li&gt;Oracle Data Integrator 12cR1 (12.2.1)&lt;/li&gt;
&lt;li&gt;Oracle GoldenGate 12c&lt;/li&gt;
&lt;li&gt;Oracle R Distribution 3.2.0&lt;/li&gt;
&lt;li&gt;Oracle Perfect Balance 2.6.0&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;big-data-lite-설치:2dadf6bc939cbc50ba4be64b2cbf5c45&#34;&gt;Big Data Lite 설치&lt;/h1&gt;

&lt;p&gt;Big Data Lite를 설치하기 위해서는 다음과 같은 사전 준비가 필요합니다.&lt;/p&gt;

&lt;h2 id=&#34;big-data-lite를-위한-사전-준비사항:2dadf6bc939cbc50ba4be64b2cbf5c45&#34;&gt;Big Data Lite를 위한 사전 준비사항&lt;/h2&gt;

&lt;h3 id=&#34;소프트웨어:2dadf6bc939cbc50ba4be64b2cbf5c45&#34;&gt;소프트웨어&lt;/h3&gt;

&lt;p&gt;VirtualBox를 운영 할 호스트 머신에는 다음과 같은 소프트웨어가 사전에 설치되어 있어야 합니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;VirtualBox와 VirtualBox Extension Pack

&lt;ul&gt;
&lt;li&gt;4.3.26 이상의 버전이 권장&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.oracle.com/technetwork/server-storage/virtualbox/downloads/index.html&#34;&gt;http://www.oracle.com/technetwork/server-storage/virtualbox/downloads/index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;7zip

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.7-zip.org/download.html&#34;&gt;http://www.7-zip.org/download.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Big Data Lite는 오라클 Big Data Lite메인 페이지에서 13개의 7zip 분할 파일로 제공&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;하드웨어:2dadf6bc939cbc50ba4be64b2cbf5c45&#34;&gt;하드웨어&lt;/h3&gt;

&lt;p&gt;Big Data Lite 가상 인스턴스를 운영 할 호스트 머신에는 디스크, 메모리, CPU에 대하여 다음과 같은 조건을 충족해야 합니다.&lt;/p&gt;

&lt;h4 id=&#34;디스크:2dadf6bc939cbc50ba4be64b2cbf5c45&#34;&gt;디스크&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;최소 50 GB, 최대 80GB

&lt;ul&gt;
&lt;li&gt;7zip 분할 파일: 13개, 26Gb - OVA 생성 후 삭제 가능&lt;/li&gt;
&lt;li&gt;OVA 파일 - 7zip 분할 파일로 부터 생성된 파일, 30GB (VirtalBox 임포트 후 삭제 가능)&lt;/li&gt;
&lt;li&gt;VirtualBox 인스턴스 파일 - OVA를 임포트한 결과, 30GB&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;cpu:2dadf6bc939cbc50ba4be64b2cbf5c45&#34;&gt;CPU&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;4 core 이상&lt;/li&gt;
&lt;li&gt;2 core를 VirtualBox 인스턴스에 할당&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;VirtualBox는 CPU의 하드웨어 가상화 기술을 사용합니다. 따라서 CPU 별로 다음과 같은 항목이 BIOS에서 활성화 되어 있어야 합니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intel CPU의 활성화 항목

&lt;ul&gt;
&lt;li&gt;Intel VT-d&lt;/li&gt;
&lt;li&gt;Intel Virtualization Tehcnology&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://taewan.kim/images/BigDataLite/03.VTD.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AMD CPU의 활성화 항목

&lt;ul&gt;
&lt;li&gt;Secure Virtual Machine
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/04.amd_svm.jpg&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;memory:2dadf6bc939cbc50ba4be64b2cbf5c45&#34;&gt;Memory&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Host의 Memory: 최소 8GB 이상&lt;/li&gt;
&lt;li&gt;인스턴스 할당 최소 메모리 사이즈: 5GB&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;가상 인스턴스에 할당하는 메모리의 경우 메모리 할당 사이즈에 따라서 다음과 같은 컴포넌트를 추가로 사용할 수 있습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;10GB 이상: Cloudera Manager 활성화 가능&lt;/li&gt;
&lt;li&gt;12GB 이상: BDD (Big Data Discovery) 활성화

&lt;ul&gt;
&lt;li&gt;BDD 활성화 시 Cloudera Manager는 비 활성화 됩니다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;big-data-lite-다운로드:2dadf6bc939cbc50ba4be64b2cbf5c45&#34;&gt;Big Data Lite 다운로드&lt;/h2&gt;

&lt;p&gt;Big Data Lite 메인 페이지에서 7zip으로 분할된 파일 13개를 다운로드 받습니다. 파일을 다운로드 받기 위해서는 oracle.com에 대한 계정 인증 절차를 거쳐야 합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://taewan.kim/images/BigDataLite/02.download.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;가상-이미지-설치:2dadf6bc939cbc50ba4be64b2cbf5c45&#34;&gt;가상 이미지 설치&lt;/h2&gt;

&lt;p&gt;13개로 분할된 파일을 7zip을 지원하는 툴로 압축을 풀어고 설치를 진행합니다. 13개의 분할 파일의 압축을 풀면 30기가짜리 OVA 파일이 하나 생성됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://taewan.kim/images/BigDataLite/05.extract.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;7Zip을 지원하는 툴로 BigDataLite440.7z.001 파일을 선택하고 압축 풀면 27.9GB의 BigDataLite440.ova파일이 하나 생성됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://taewan.kim/images/BigDataLite/06.ova.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;이렇게 만들어진 ova를 임포트하기 위해서 &amp;ldquo;파일&amp;rdquo;-&amp;gt;&amp;ldquo;가상 시스템 가져오기&amp;rdquo;를 실행합니다.
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/07.import.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;앞에서 만든 OVA파일을 선택하고 &amp;ldquo;계속&amp;rdquo;을 클립합니다.
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/08.ovafile.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;OVA에 사전에 설치된 가상 이미지의 속성 값을 확인하고 &amp;ldquo;가져오기&amp;rdquo;를 선택합니다.
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/09.setting.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;마지막으로 라이센스 동의를 클릭합니다.
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/10.agreement.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;이제 VirtualBox의 가상 이미지 임포트 작업이 시작됩니다.
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/11.importing.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;가상 이미지가 임포트 된 후 메모리 설정을 변경하기 위하여 &amp;ldquo;설정&amp;rdquo; 메뉴를 실행합니다.
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/12.imported.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;시스템&amp;rdquo;텝에서 5기가 이상의 메모리를 설정합니다. Cloudera Manager를 사용하고자 한다면 10 기가 이상의 메모리를 설정해야 합니다.
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/13.settingMemory.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;시작&amp;rdquo;메뉴를 선택하여 가상 이미지를 시작합니다.
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/14.start.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Big Data Lite&amp;rdquo; 가상 이미지의 기본 계정은 oracle있니다.
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/15.login.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;로그인하기 위한 계정 정보는 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Account: oracle&lt;/li&gt;
&lt;li&gt;Password: welcome1
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/16.window.png&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;big-data-lite-서비스-관리:2dadf6bc939cbc50ba4be64b2cbf5c45&#34;&gt;Big Data Lite 서비스 관리&lt;/h1&gt;

&lt;h2 id=&#34;서비스-접속-정보:2dadf6bc939cbc50ba4be64b2cbf5c45&#34;&gt;서비스 접속 정보&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Linux

&lt;ul&gt;
&lt;li&gt;root/welcome1&lt;/li&gt;
&lt;li&gt;oracle/welcome1&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Oracle Database 12c

&lt;ul&gt;
&lt;li&gt;service: orcl&lt;/li&gt;
&lt;li&gt;port: 1521&lt;/li&gt;
&lt;li&gt;account: moviedemo/welcome1&lt;/li&gt;
&lt;li&gt;기타 모든 패스워드: welcome1&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Oracle Data Integrator

&lt;ul&gt;
&lt;li&gt;ODI User: SUPERVISOR&lt;/li&gt;
&lt;li&gt;ODI Password: welcome1&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Oracle Big Data Discovery

&lt;ul&gt;
&lt;li&gt;http://{BDL_IP}:9003/bdd/web/hoe/index&lt;/li&gt;
&lt;li&gt;user: admin@oracle.com&lt;/li&gt;
&lt;li&gt;password: welcome1&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Oracle NoSQL

&lt;ul&gt;
&lt;li&gt;Administraion Page: http://{BDL_IP}:5001&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Hive Metastore (MySQL)

&lt;ul&gt;
&lt;li&gt;user: hive&lt;/li&gt;
&lt;li&gt;password: welcome1&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Weblogic

&lt;ul&gt;
&lt;li&gt;http://{BDL_IP}:7001/console&lt;/li&gt;
&lt;li&gt;user: weblogic&lt;/li&gt;
&lt;li&gt;password: welcome1&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;RStudio

&lt;ul&gt;
&lt;li&gt;http://{BDL_IP}:8787&lt;/li&gt;
&lt;li&gt;user: oracle&lt;/li&gt;
&lt;li&gt;password: welcome1&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Cloudera Manager

&lt;ul&gt;
&lt;li&gt;http://{BDL_IP}:7180&lt;/li&gt;
&lt;li&gt;user: admin&lt;/li&gt;
&lt;li&gt;password: admin&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Oracle MoviePlex Demo - Sample

&lt;ul&gt;
&lt;li&gt;http://{BDL_IP}:7001/movieplex/index.jsp&lt;/li&gt;
&lt;li&gt;user: guest1&lt;/li&gt;
&lt;li&gt;password: welcome1&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;서비스-시작하기:2dadf6bc939cbc50ba4be64b2cbf5c45&#34;&gt;서비스 시작하기&lt;/h2&gt;

&lt;p&gt;Big Data Lite는 다수의 서비스가 설치되어 있습니다. 각 서비스는 바탕화면의 &amp;ldquo;start/stop Services&amp;rdquo; 아이콘과 Cloudera Manager로 관리됩니다. 두 방법은 상호 배타적입니다.&lt;/p&gt;

&lt;p&gt;기본  서비스 관리 방법은 &amp;ldquo;start/stop Services&amp;rdquo;를 이용한 방법입니다. Cloudera를 사용하고자 한다면 우선 메모리 설정을 10GB 이상을 할당하고 &amp;ldquo;start/stop Services&amp;rdquo;을 시작한 후 모든 서비스를 off하고 리눅스를 재시작합니다. 재시작 이후에 &amp;ldquo;start/stop Services&amp;rdquo; 실행하면 &amp;ldquo;Cloudera Manager 서비스&amp;rdquo;가 나타나는 것을 확인 할 수 있습니다.&lt;/p&gt;

&lt;h3 id=&#34;기본-서비스-관리:2dadf6bc939cbc50ba4be64b2cbf5c45&#34;&gt;기본 서비스 관리&lt;/h3&gt;

&lt;p&gt;&amp;ldquo;start/stop Services&amp;rdquo;를 더블 클릭하면 GUI 형태의 터미널을 볼 수 있습니다. 사용하고자 하는 서비스를 마우스로 선택하고 &lt;OK&gt;를 마우스로 클릭하면 체크된 서비스가 시작됩니다.&lt;br /&gt;
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/17.services.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;cloudera-manager로-관리:2dadf6bc939cbc50ba4be64b2cbf5c45&#34;&gt;Cloudera Manager로 관리&lt;/h3&gt;

&lt;p&gt;바탕화면의 &amp;ldquo;start/stop Services&amp;rdquo;를 실행한 후 모든 서비스를 체크를 해제한 후 &lt;ok&gt;를 클릭하고 리눅스를 재시작 합니다. (sudo reboot)
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/18.uncheck.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;재시작 후에 &amp;ldquo;start/stop Services&amp;rdquo;를 시작해 보면 가장 아래에 Cludera Manager가 나타난 것을 확인 할 수 있습니다.
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/19.cmService.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Cloudera Manager가 시작되면 다음과이 Cloudera Manager URL을 통해서 접근 가능합니다.
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/20.cm.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;로그인 정보는 다음과 같습니다.
* user: admin
* password: admin
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/21.cm.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;이제 부터는 Cloudera Manager로 구성 서비스를 시작 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;리부팅 후 다시 &amp;ldquo;start/stop Services&amp;rdquo;를 시작해 보면 Cloudera Manager와 Oracle, NoSQL만을 제외한 다른 서비스는 사라진 것을 확인 할 수 있습니다.
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/21.service.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;네트웍-설정:2dadf6bc939cbc50ba4be64b2cbf5c45&#34;&gt;네트웍 설정&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://taewan.kim/blog/2016/01/31/virtualvox_network_config/&#34;&gt;http://taewan.kim/blog/2016/01/31/virtualvox_network_config/&lt;/a&gt; 의 내용을 참조하여 Host에서 VM에 접근 가능한 네트웍 설정을 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;네트웍 설정을 마치고 가상 머신을 재시작하면 eth2가 설정된 것을 가상 머신에서 확인할 수 있습니다.
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/28.vm_ip.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;호스트에서 이 IP을 이용하여 가상 머신의 서버스에 접근 가능합니다.
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/29.hue.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;다음같이 ssh 접근도 가능합니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;taewan@demo $ssh oracle@192.168.56.101
oracle@192.168.56.101&#39;s password: 
[oracle@bigdatalite ~]$ uname -a
Linux bigdatalite.localdomain 2.6.39-400.264.5.el6uek.x86_64 #1 SMP Tue Nov 3 18:37:52 PST 2015 x86_64 x86_64 x86_64 GNU/Linux
[oracle@bigdatalite ~]$ 

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;host와-vm의-공유-디렉터리-설정:2dadf6bc939cbc50ba4be64b2cbf5c45&#34;&gt;Host와 VM의 공유 디렉터리 설정&lt;/h1&gt;

&lt;p&gt;테스트를 효과적으로 진행하기 위하여 Host와 가상 머신 간의 공유 디렉터리를 설정하면 효과적입니다.&lt;/p&gt;

&lt;p&gt;VirtualBox의 Big Data Lite 가상 인스턴스를 선택하고 &amp;ldquo;설정&amp;rdquo; 메뉴를 실행합니다.
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/22.setting.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;공유폴더&amp;rdquo; 텝에서 설정을 추가합니다.
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/23.shar.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;호스트와 가상머신의 공유 폴더를 지정합니다.
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/24.shreddiredtory.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;설정이 완료되면 다음과 같은 결과를 볼 수 있습니다.
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/25.config.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;공유-폴더-설정-확인:2dadf6bc939cbc50ba4be64b2cbf5c45&#34;&gt;공유 폴더 설정 확인&lt;/h2&gt;

&lt;p&gt;가상 인스턴스를 재시작하면 가상 머신에서 /media/sf_share가 마운트 되어 있는 것을 확인 할 수 있습니다. 테스트를 위해 test파일을 하나 추가합니다.
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/26.share-bdl.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;호스트에서 지정한 폴더에서 가상 머신에서 추가한 파일을 확인 할 수 있습니다.
&lt;img src=&#34;http://taewan.kim/images/BigDataLite/27.share-host.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;요약:2dadf6bc939cbc50ba4be64b2cbf5c45&#34;&gt;요약&lt;/h1&gt;

&lt;p&gt;지금까지 Oracle Big Data Lite의 설치 절차에 대하여 정리해 보았습니다. Big data Lite에는 Hadoop, Spark, Hive, Pig, Impala, Hue, 등 빅데이터 에코의 대부분의 최신버전 소프트웨어가 포함되어 있습니다. 추가 예제로 MoviePlex가 포함되어 있고 Big Data Lite의 메인 페이지에는 오라클이 제공하는 다수의 강좌 파일이 올라가 있습니다. 이를 활용하여 초기 빅데이터 학습 및 테스트 환경으로 사용할 경우 상당한 효용성을 볼 수 있습니다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>파이썬 입문 온라인 자료 정리</title>
      <link>http://taewan.kim/blog/2016/03/27/python_resource/</link>
      <pubDate>Sun, 27 Mar 2016 10:25:36 +0900</pubDate>
      
      <guid>http://taewan.kim/blog/2016/03/27/python_resource/</guid>
      <description>

&lt;p&gt;파이썬 온라인 강좌들에 대한 요약입니다.&lt;/p&gt;

&lt;h2 id=&#34;youtube의-mit-파이썬-강좌:00e66bf83c56b8b0fb3d997652e04fec&#34;&gt;Youtube의 MIT 파이썬 강좌&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL57FCE46F714A03BC&#34;&gt;MIT Python Course: https://www.youtube.com/playlist?list=PL57FCE46F714A03BC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;전체: 24개 강좌로 구성 (동영상 평균 60분)&lt;/li&gt;
&lt;li&gt;2016.03.29현재 18편까지 한글 자막 제공&lt;/li&gt;
&lt;li&gt;컴퓨터 과학이론을 파이썬으로 강의 하는 내용으로 구성&lt;/li&gt;
&lt;li&gt;2008년 가을 학기 강의 내용&lt;/li&gt;
&lt;/ul&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/k6U-i4gXkLM&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;


&lt;h2 id=&#34;mooc-massive-open-online-course:00e66bf83c56b8b0fb3d997652e04fec&#34;&gt;MOOC(Massive Open Online Course)&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;edx: &lt;a href=&#34;https://www.edx.org/course?search_query=python&#34;&gt;https://www.edx.org/course?search_query=python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;coursera: &lt;a href=&#34;https://www.coursera.org/courses?query=python&#34;&gt;https://www.coursera.org/courses?query=python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;microsoft-virtual-academy:00e66bf83c56b8b0fb3d997652e04fec&#34;&gt;Microsoft Virtual Academy&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mva.microsoft.com/search/SearchResults.aspx#!q=python&amp;amp;lang=1042&#34;&gt;https://mva.microsoft.com/search/SearchResults.aspx#!q=python&amp;amp;lang=1042&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;마이크로소프트웨어가 제공하는 강좌&lt;/li&gt;
&lt;li&gt;한글 자막 제공&lt;/li&gt;
&lt;li&gt;현재 강좌 종류

&lt;ul&gt;
&lt;li&gt;Python을 사용한 프로그래밍 소개&lt;/li&gt;
&lt;li&gt;Python 및 Django를 사용하여 웹 사이트 개발&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://taewan.kim/images/python/mva.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;백문의-불여일타-code-academy:00e66bf83c56b8b0fb3d997652e04fec&#34;&gt;백문의 불여일타: code academy&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;코드를 입력하여 실습하는 강좌&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.codeacademy.com&#34;&gt;https://www.codeacademy.com&lt;/a&gt;
&lt;img src=&#34;http://taewan.kim/images/python/codeacademy1.jpg&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;http://taewan.kim/images/python/codeacademy2.jpg&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;문제-풀이-사이트-해커랭크:00e66bf83c56b8b0fb3d997652e04fec&#34;&gt;문제 풀이 사이트: 해커랭크&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.hackerrank.com&#34;&gt;https://www.hackerrank.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;파이썬 문제를 3개의 카테고리로 제공

&lt;ul&gt;
&lt;li&gt;각 단계를 완료해야 다음 단계를 확인 할 수 있음&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://taewan.kim/images/python/hackerrank1.jpg&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;http://taewan.kim/images/python/hackerrank2.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>problem 01</title>
      <link>http://taewan.kim/documents/prolog99/problem-01.html</link>
      <pubDate>Fri, 25 Mar 2016 18:00:54 +0900</pubDate>
      
      <guid>http://taewan.kim/documents/prolog99/problem-01.html</guid>
      <description>

&lt;h2 id=&#34;현재-상태:ae225dbb0108137226a4721d51b6129f&#34;&gt;현재 상태&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;2016-03-25: 풀이 중&lt;/li&gt;
&lt;li&gt;2016-03-25: 1/2번 풀이 종료&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;문제:ae225dbb0108137226a4721d51b6129f&#34;&gt;문제&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;리스트의 마지막 엘리먼트를 구하시오?&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;scala&amp;gt; last(List(1, 1, 2, 3, 5, 8))
res0: Int = 8
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;풀이:ae225dbb0108137226a4721d51b6129f&#34;&gt;풀이&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;단순 풀이&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;object P01 {
  def last[A](list:List[A]):A=list.last
}

import P01._

var result = last(List(1, 2, 3, 4, 5, 6))
println(result)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;재귀방식 풀이&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;object P01R{
  @tailrec
  def last[A](list:List[A]):A = list match {
    case h::Nil =&amp;gt; h
    case _::tail  =&amp;gt; last(tail)
    case _ =&amp;gt; throw new NoSuchElementException
  }
}

import P01R._

var result = last(List(1,2,1,1,2,3,4,5))
println(result)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://taewan.kim/documents/Problem-NintyNine4Scala.html&#34;&gt;&amp;ldquo;Prolog99 for scala&amp;rdquo; 돌아가기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>problem 02</title>
      <link>http://taewan.kim/documents/prolog99/problem-02.html</link>
      <pubDate>Fri, 25 Mar 2016 18:00:54 +0900</pubDate>
      
      <guid>http://taewan.kim/documents/prolog99/problem-02.html</guid>
      <description>

&lt;h2 id=&#34;현재-상태:29792a39170f4e52c3470154bba77043&#34;&gt;현재 상태&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;2016-03-27: 문서 생성&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;문제:29792a39170f4e52c3470154bba77043&#34;&gt;문제&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;리스트의 끝에서 두번째 엘리먼트를 구하시오?

&lt;ul&gt;
&lt;li&gt;예제 코드
&lt;code&gt;scala
scala&amp;gt; penultimate(List(1, 1, 2, 3, 5, 8))
res0: Int = 5
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;풀이:29792a39170f4e52c3470154bba77043&#34;&gt;풀이&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;단순 풀이&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;object P02{
  def penultimate[A](list:List[A]):A = {
    return list(list.length-2)
  }
}

import P02._
penultimate(List(1, 1, 2, 3, 5, 8))
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;재귀방식 풀이&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;object P01R{
  @tailrec
  def last[A](list:List[A]):A = list match {
    case h::Nil =&amp;gt; h
    case _::tail  =&amp;gt; last(tail)
    case _ =&amp;gt; throw new NoSuchElementException
  }
}

import P01R._

var result = last(List(1,2,1,1,2,3,4,5))
println(result)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://taewan.kim/documents/Problem-NintyNine4Scala.html&#34;&gt;&amp;ldquo;Prolog99 for scala&amp;rdquo; 돌아가기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>